@model IEnumerable<P1v4.test.Models.Entry>

@{
    ViewData["Title"] = "Index";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.js"></script>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<p>
    <input type="button" id="button-a" value=" Export Table" />
</p>

<div id="wrapper">
    <table id="mytable" class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fecha)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HE)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HE_A)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HS_A)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HS)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.User.UserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HE)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HE_A)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HS_A)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HS)
                </td>


            </tr>
        }
    </table>
</div>
<script>
    var wb = XLSX.utils.table_to_book(document.getElementById('mytable'), { sheet: "Sheet JS" });
    var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'binary' });
    function s2ab(s) {
        var buf = new ArrayBuffer(s.length);
        var view = new Uint8Array(buf);
        for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
        return buf;
    }
    $("#button-a").click(function () {
        saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), 'Entries.xlsx');
    });
</script>
